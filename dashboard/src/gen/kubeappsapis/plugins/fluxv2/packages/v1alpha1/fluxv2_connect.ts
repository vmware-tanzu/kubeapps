// Copyright 2021-2023 the Kubeapps contributors.
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts,import_extension=none"
// @generated from file kubeappsapis/plugins/fluxv2/packages/v1alpha1/fluxv2.proto (package kubeappsapis.plugins.fluxv2.packages.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  CreateInstalledPackageRequest,
  CreateInstalledPackageResponse,
  DeleteInstalledPackageRequest,
  DeleteInstalledPackageResponse,
  GetAvailablePackageDetailRequest,
  GetAvailablePackageDetailResponse,
  GetAvailablePackageSummariesRequest,
  GetAvailablePackageSummariesResponse,
  GetAvailablePackageVersionsRequest,
  GetAvailablePackageVersionsResponse,
  GetInstalledPackageDetailRequest,
  GetInstalledPackageDetailResponse,
  GetInstalledPackageResourceRefsRequest,
  GetInstalledPackageResourceRefsResponse,
  GetInstalledPackageSummariesRequest,
  GetInstalledPackageSummariesResponse,
  UpdateInstalledPackageRequest,
  UpdateInstalledPackageResponse,
} from "../../../../core/packages/v1alpha1/packages_pb";
import { MethodKind } from "@bufbuild/protobuf";
import {
  AddPackageRepositoryRequest,
  AddPackageRepositoryResponse,
  DeletePackageRepositoryRequest,
  DeletePackageRepositoryResponse,
  GetPackageRepositoryDetailRequest,
  GetPackageRepositoryDetailResponse,
  GetPackageRepositoryPermissionsRequest,
  GetPackageRepositoryPermissionsResponse,
  GetPackageRepositorySummariesRequest,
  GetPackageRepositorySummariesResponse,
  UpdatePackageRepositoryRequest,
  UpdatePackageRepositoryResponse,
} from "../../../../core/packages/v1alpha1/repositories_pb";

/**
 * @generated from service kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService
 */
export const FluxV2PackagesService = {
  typeName: "kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService",
  methods: {
    /**
     * GetAvailablePackageSummaries returns the available packages managed by the 'fluxv2' plugin
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.GetAvailablePackageSummaries
     */
    getAvailablePackageSummaries: {
      name: "GetAvailablePackageSummaries",
      I: GetAvailablePackageSummariesRequest,
      O: GetAvailablePackageSummariesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAvailablePackageDetail returns the package metadata managed by the 'fluxv2' plugin
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.GetAvailablePackageDetail
     */
    getAvailablePackageDetail: {
      name: "GetAvailablePackageDetail",
      I: GetAvailablePackageDetailRequest,
      O: GetAvailablePackageDetailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAvailablePackageVersions returns the package versions managed by the 'fluxv2' plugin
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.GetAvailablePackageVersions
     */
    getAvailablePackageVersions: {
      name: "GetAvailablePackageVersions",
      I: GetAvailablePackageVersionsRequest,
      O: GetAvailablePackageVersionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetInstalledPackageSummaries returns the installed packages managed by the 'fluxv2' plugin
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.GetInstalledPackageSummaries
     */
    getInstalledPackageSummaries: {
      name: "GetInstalledPackageSummaries",
      I: GetInstalledPackageSummariesRequest,
      O: GetInstalledPackageSummariesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetInstalledPackageDetail returns the requested installed package managed by the 'fluxv2' plugin
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.GetInstalledPackageDetail
     */
    getInstalledPackageDetail: {
      name: "GetInstalledPackageDetail",
      I: GetInstalledPackageDetailRequest,
      O: GetInstalledPackageDetailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateInstalledPackage creates an installed package based on the request.
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.CreateInstalledPackage
     */
    createInstalledPackage: {
      name: "CreateInstalledPackage",
      I: CreateInstalledPackageRequest,
      O: CreateInstalledPackageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateInstalledPackage updates an installed package based on the request.
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.UpdateInstalledPackage
     */
    updateInstalledPackage: {
      name: "UpdateInstalledPackage",
      I: UpdateInstalledPackageRequest,
      O: UpdateInstalledPackageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteInstalledPackage deletes an installed package based on the request.
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.DeleteInstalledPackage
     */
    deleteInstalledPackage: {
      name: "DeleteInstalledPackage",
      I: DeleteInstalledPackageRequest,
      O: DeleteInstalledPackageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetInstalledPackageResourceRefs returns the references for the Kubernetes
     * resources created by an installed package.
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2PackagesService.GetInstalledPackageResourceRefs
     */
    getInstalledPackageResourceRefs: {
      name: "GetInstalledPackageResourceRefs",
      I: GetInstalledPackageResourceRefsRequest,
      O: GetInstalledPackageResourceRefsResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;

/**
 * @generated from service kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService
 */
export const FluxV2RepositoriesService = {
  typeName: "kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService",
  methods: {
    /**
     * AddPackageRepository add an existing package repository to the set of ones already managed by the
     * 'fluxv2' plugin
     *
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService.AddPackageRepository
     */
    addPackageRepository: {
      name: "AddPackageRepository",
      I: AddPackageRepositoryRequest,
      O: AddPackageRepositoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService.GetPackageRepositoryDetail
     */
    getPackageRepositoryDetail: {
      name: "GetPackageRepositoryDetail",
      I: GetPackageRepositoryDetailRequest,
      O: GetPackageRepositoryDetailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService.GetPackageRepositorySummaries
     */
    getPackageRepositorySummaries: {
      name: "GetPackageRepositorySummaries",
      I: GetPackageRepositorySummariesRequest,
      O: GetPackageRepositorySummariesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService.UpdatePackageRepository
     */
    updatePackageRepository: {
      name: "UpdatePackageRepository",
      I: UpdatePackageRepositoryRequest,
      O: UpdatePackageRepositoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService.DeletePackageRepository
     */
    deletePackageRepository: {
      name: "DeletePackageRepository",
      I: DeletePackageRepositoryRequest,
      O: DeletePackageRepositoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kubeappsapis.plugins.fluxv2.packages.v1alpha1.FluxV2RepositoriesService.GetPackageRepositoryPermissions
     */
    getPackageRepositoryPermissions: {
      name: "GetPackageRepositoryPermissions",
      I: GetPackageRepositoryPermissionsRequest,
      O: GetPackageRepositoryPermissionsResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;
