// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: kubeappsapis/core/packages/v1alpha1/packages.proto

package v1alpha1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1alpha1 "github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen/core/plugins/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetAvailablePackageSummariesRequest
//
// Request for GetAvailablePackageSummaries
type GetAvailablePackageSummariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The context (cluster/namespace) for the request
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// The filters used for the request
	FilterOptions *FilterOptions `protobuf:"bytes,2,opt,name=filter_options,json=filterOptions,proto3" json:"filter_options,omitempty"`
	// PaginationOptions
	//
	// Pagination options specifying where to start and how many results to include.
	PaginationOptions *PaginationOptions `protobuf:"bytes,3,opt,name=pagination_options,json=paginationOptions,proto3" json:"pagination_options,omitempty"`
}

func (x *GetAvailablePackageSummariesRequest) Reset() {
	*x = GetAvailablePackageSummariesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailablePackageSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePackageSummariesRequest) ProtoMessage() {}

func (x *GetAvailablePackageSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePackageSummariesRequest.ProtoReflect.Descriptor instead.
func (*GetAvailablePackageSummariesRequest) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{0}
}

func (x *GetAvailablePackageSummariesRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetAvailablePackageSummariesRequest) GetFilterOptions() *FilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

func (x *GetAvailablePackageSummariesRequest) GetPaginationOptions() *PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

// GetAvailablePackageDetailRequest
//
// Request for GetAvailablePackageDetail
type GetAvailablePackageDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The information required to uniquely
	// identify an available package
	AvailablePackageRef *AvailablePackageReference `protobuf:"bytes,1,opt,name=available_package_ref,json=availablePackageRef,proto3" json:"available_package_ref,omitempty"`
	// Optional specific version (or version reference) to request.
	// By default the latest version (or latest version matching the reference)
	// will be returned.
	PkgVersion string `protobuf:"bytes,2,opt,name=pkg_version,json=pkgVersion,proto3" json:"pkg_version,omitempty"`
}

func (x *GetAvailablePackageDetailRequest) Reset() {
	*x = GetAvailablePackageDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailablePackageDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePackageDetailRequest) ProtoMessage() {}

func (x *GetAvailablePackageDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePackageDetailRequest.ProtoReflect.Descriptor instead.
func (*GetAvailablePackageDetailRequest) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{1}
}

func (x *GetAvailablePackageDetailRequest) GetAvailablePackageRef() *AvailablePackageReference {
	if x != nil {
		return x.AvailablePackageRef
	}
	return nil
}

func (x *GetAvailablePackageDetailRequest) GetPkgVersion() string {
	if x != nil {
		return x.PkgVersion
	}
	return ""
}

// GetAvailablePackageVersionsRequest
//
// Request for GetAvailablePackageVersions
type GetAvailablePackageVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The information required to uniquely
	// identify an available package
	AvailablePackageRef *AvailablePackageReference `protobuf:"bytes,1,opt,name=available_package_ref,json=availablePackageRef,proto3" json:"available_package_ref,omitempty"`
	// Optional version reference for which full version history is required.  By
	// default a summary of versions is returned as outlined in the response.
	// Plugins can choose not to implement this and provide the summary only, it
	// is provided for completeness only.
	PkgVersion string `protobuf:"bytes,2,opt,name=pkg_version,json=pkgVersion,proto3" json:"pkg_version,omitempty"`
}

func (x *GetAvailablePackageVersionsRequest) Reset() {
	*x = GetAvailablePackageVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailablePackageVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePackageVersionsRequest) ProtoMessage() {}

func (x *GetAvailablePackageVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePackageVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailablePackageVersionsRequest) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{2}
}

func (x *GetAvailablePackageVersionsRequest) GetAvailablePackageRef() *AvailablePackageReference {
	if x != nil {
		return x.AvailablePackageRef
	}
	return nil
}

func (x *GetAvailablePackageVersionsRequest) GetPkgVersion() string {
	if x != nil {
		return x.PkgVersion
	}
	return ""
}

// GetInstalledPackageSummariesRequest
//
// Request for GetInstalledPackageSummeraies
type GetInstalledPackageSummariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The context (cluster/namespace) for the request.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// PaginationOptions
	//
	// Pagination options specifying where to start and how many results to include.
	PaginationOptions *PaginationOptions `protobuf:"bytes,2,opt,name=pagination_options,json=paginationOptions,proto3" json:"pagination_options,omitempty"`
}

func (x *GetInstalledPackageSummariesRequest) Reset() {
	*x = GetInstalledPackageSummariesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstalledPackageSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstalledPackageSummariesRequest) ProtoMessage() {}

func (x *GetInstalledPackageSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstalledPackageSummariesRequest.ProtoReflect.Descriptor instead.
func (*GetInstalledPackageSummariesRequest) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{3}
}

func (x *GetInstalledPackageSummariesRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetInstalledPackageSummariesRequest) GetPaginationOptions() *PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

// GetAvailablePackageSummariesResponse
//
// Response for GetAvailablePackageSummaries
type GetAvailablePackageSummariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Available packages summaries
	//
	// List of AvailablePackageSummary
	AvailablePackagesSummaries []*AvailablePackageSummary `protobuf:"bytes,1,rep,name=available_packages_summaries,json=availablePackagesSummaries,proto3" json:"available_packages_summaries,omitempty"`
	// Next page token
	//
	// This field represents the pagination token to retrieve the next page of
	// results. If the value is "", it means no further results for the request.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetAvailablePackageSummariesResponse) Reset() {
	*x = GetAvailablePackageSummariesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailablePackageSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePackageSummariesResponse) ProtoMessage() {}

func (x *GetAvailablePackageSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePackageSummariesResponse.ProtoReflect.Descriptor instead.
func (*GetAvailablePackageSummariesResponse) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{4}
}

func (x *GetAvailablePackageSummariesResponse) GetAvailablePackagesSummaries() []*AvailablePackageSummary {
	if x != nil {
		return x.AvailablePackagesSummaries
	}
	return nil
}

func (x *GetAvailablePackageSummariesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetAvailablePackageDetailResponse
//
// Response for GetAvailablePackageDetail
type GetAvailablePackageDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Available package detail
	//
	// List of AvailablePackageDetail
	AvailablePackageDetail *AvailablePackageDetail `protobuf:"bytes,1,opt,name=available_package_detail,json=availablePackageDetail,proto3" json:"available_package_detail,omitempty"`
}

func (x *GetAvailablePackageDetailResponse) Reset() {
	*x = GetAvailablePackageDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailablePackageDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePackageDetailResponse) ProtoMessage() {}

func (x *GetAvailablePackageDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePackageDetailResponse.ProtoReflect.Descriptor instead.
func (*GetAvailablePackageDetailResponse) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{5}
}

func (x *GetAvailablePackageDetailResponse) GetAvailablePackageDetail() *AvailablePackageDetail {
	if x != nil {
		return x.AvailablePackageDetail
	}
	return nil
}

// GetAvailablePackageVersionsResponse
//
// Response for GetAvailablePackageVersions
type GetAvailablePackageVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// By default (when version_query is empty or ignored) the response
	// should contain an ordered summary of versions including the most recent three
	// patch versions of the most recent three minor versions of the most recent three
	// major versions when available, something like:
	// [
	//   { pkg_version: "10.3.19", app_version: "2.16.8" },
	//   { pkg_version: "10.3.18", app_version: "2.16.8" },
	//   { pkg_version: "10.3.17", app_version: "2.16.7" },
	//   { pkg_version: "10.2.6", app_version: "2.15.3" },
	//   { pkg_version: "10.2.5", app_version: "2.15.2" },
	//   { pkg_version: "10.2.4", app_version: "2.15.2" },
	//   { pkg_version: "10.1.8", app_version: "2.13.5" },
	//   { pkg_version: "10.1.7", app_version: "2.13.5" },
	//   { pkg_version: "10.1.6", app_version: "2.13.5" },
	//   { pkg_version: "9.5.4", app_version: "2.8.9" },
	//   ...
	//   { pkg_version: "8.2.5", app_version: "1.19.5" },
	//   ...
	// ]
	// If a version_query is present and the plugin chooses to support it,
	// the full history of versions matching the version query should be returned.
	PackageAppVersions []*GetAvailablePackageVersionsResponse_PackageAppVersion `protobuf:"bytes,1,rep,name=package_app_versions,json=packageAppVersions,proto3" json:"package_app_versions,omitempty"`
}

func (x *GetAvailablePackageVersionsResponse) Reset() {
	*x = GetAvailablePackageVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailablePackageVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePackageVersionsResponse) ProtoMessage() {}

func (x *GetAvailablePackageVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePackageVersionsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailablePackageVersionsResponse) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{6}
}

func (x *GetAvailablePackageVersionsResponse) GetPackageAppVersions() []*GetAvailablePackageVersionsResponse_PackageAppVersion {
	if x != nil {
		return x.PackageAppVersions
	}
	return nil
}

// GetInstalledPackageSummariesResponse
//
// Response for GetInstalledPackageSummaries
type GetInstalledPackageSummariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Installed packages summaries
	//
	// List of InstalledPackageSummary
	InstalledPackagesSummaries []*InstalledPackageSummary `protobuf:"bytes,1,rep,name=installed_packages_summaries,json=installedPackagesSummaries,proto3" json:"installed_packages_summaries,omitempty"`
	// The token used to request the next page of results
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *GetInstalledPackageSummariesResponse) Reset() {
	*x = GetInstalledPackageSummariesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstalledPackageSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstalledPackageSummariesResponse) ProtoMessage() {}

func (x *GetInstalledPackageSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstalledPackageSummariesResponse.ProtoReflect.Descriptor instead.
func (*GetInstalledPackageSummariesResponse) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{7}
}

func (x *GetInstalledPackageSummariesResponse) GetInstalledPackagesSummaries() []*InstalledPackageSummary {
	if x != nil {
		return x.InstalledPackagesSummaries
	}
	return nil
}

func (x *GetInstalledPackageSummariesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// AvailablePackageSummary
//
// An AvailablePackageSummary provides a summary of a package available for installation
// useful when aggregating many available packages.
type AvailablePackageSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Available package reference
	//
	// A reference uniquely identifying the package.
	AvailablePackageRef *AvailablePackageReference `protobuf:"bytes,1,opt,name=available_package_ref,json=availablePackageRef,proto3" json:"available_package_ref,omitempty"`
	// Available package name
	//
	// The name of the available package
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Latest available package version
	//
	// The latest version available for this package. Often expected when viewing
	// a summary of many available packages.
	LatestPkgVersion string `protobuf:"bytes,3,opt,name=latest_pkg_version,json=latestPkgVersion,proto3" json:"latest_pkg_version,omitempty"`
	// Available package Icon URL
	//
	// A url for an icon.
	IconUrl string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// Available package display name
	//
	// A name as displayed to users
	DisplayName string `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Available package short description
	//
	// A short description of the app provided by the package
	ShortDescription string `protobuf:"bytes,6,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
}

func (x *AvailablePackageSummary) Reset() {
	*x = AvailablePackageSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablePackageSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablePackageSummary) ProtoMessage() {}

func (x *AvailablePackageSummary) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablePackageSummary.ProtoReflect.Descriptor instead.
func (*AvailablePackageSummary) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{8}
}

func (x *AvailablePackageSummary) GetAvailablePackageRef() *AvailablePackageReference {
	if x != nil {
		return x.AvailablePackageRef
	}
	return nil
}

func (x *AvailablePackageSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AvailablePackageSummary) GetLatestPkgVersion() string {
	if x != nil {
		return x.LatestPkgVersion
	}
	return ""
}

func (x *AvailablePackageSummary) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *AvailablePackageSummary) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AvailablePackageSummary) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

// AvailablePackageDetail
//
// An AvailablePackageDetail provides additional details required when
// inspecting an individual package.
type AvailablePackageDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Available package reference
	//
	// A reference uniquely identifying the package.
	AvailablePackageRef *AvailablePackageReference `protobuf:"bytes,1,opt,name=available_package_ref,json=availablePackageRef,proto3" json:"available_package_ref,omitempty"`
	// Available package name
	//
	// The name of the available package
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Available package version
	//
	// The version of the package (eg. chart version)
	PkgVersion string `protobuf:"bytes,3,opt,name=pkg_version,json=pkgVersion,proto3" json:"pkg_version,omitempty"`
	// Available package app version
	//
	// The version of the packaged application (eg. wordpress version or whatever).
	AppVersion string `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	// Available package icon URL
	//
	// A url for an icon.
	IconUrl string `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// Available package display name
	//
	// A name as displayed to users
	DisplayName string `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Available package short description
	//
	// A short description of the app provided by the package
	ShortDescription string `protobuf:"bytes,7,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	// Available package long description
	//
	// A longer description of the package, a few sentences.
	LongDescription string `protobuf:"bytes,8,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	// Available package readme
	//
	// A longer README with potentially pages of formatted Markdown.
	Readme string `protobuf:"bytes,9,opt,name=readme,proto3" json:"readme,omitempty"`
	// Available package default values
	//
	// An example of default values used during package templating that can serve
	// as documentation or a starting point for user customization.
	DefaultValues string `protobuf:"bytes,10,opt,name=default_values,json=defaultValues,proto3" json:"default_values,omitempty"`
	ValuesSchema  string `protobuf:"bytes,11,opt,name=values_schema,json=valuesSchema,proto3" json:"values_schema,omitempty"`
	// Available package maintainers
	//
	// List of Maintainer
	Maintainers []*Maintainer `protobuf:"bytes,12,rep,name=maintainers,proto3" json:"maintainers,omitempty"`
	// Custom data added by the plugin
	//
	// Some additional information added by the plugin
	CustomDetail *anypb.Any `protobuf:"bytes,13,opt,name=custom_detail,json=customDetail,proto3" json:"custom_detail,omitempty"`
}

func (x *AvailablePackageDetail) Reset() {
	*x = AvailablePackageDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablePackageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablePackageDetail) ProtoMessage() {}

func (x *AvailablePackageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablePackageDetail.ProtoReflect.Descriptor instead.
func (*AvailablePackageDetail) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{9}
}

func (x *AvailablePackageDetail) GetAvailablePackageRef() *AvailablePackageReference {
	if x != nil {
		return x.AvailablePackageRef
	}
	return nil
}

func (x *AvailablePackageDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AvailablePackageDetail) GetPkgVersion() string {
	if x != nil {
		return x.PkgVersion
	}
	return ""
}

func (x *AvailablePackageDetail) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *AvailablePackageDetail) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *AvailablePackageDetail) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AvailablePackageDetail) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *AvailablePackageDetail) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

func (x *AvailablePackageDetail) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

func (x *AvailablePackageDetail) GetDefaultValues() string {
	if x != nil {
		return x.DefaultValues
	}
	return ""
}

func (x *AvailablePackageDetail) GetValuesSchema() string {
	if x != nil {
		return x.ValuesSchema
	}
	return ""
}

func (x *AvailablePackageDetail) GetMaintainers() []*Maintainer {
	if x != nil {
		return x.Maintainers
	}
	return nil
}

func (x *AvailablePackageDetail) GetCustomDetail() *anypb.Any {
	if x != nil {
		return x.CustomDetail
	}
	return nil
}

// InstalledPackageSummary
//
// An InstalledPackageSummary provides a summary of an installed package
// useful when aggregating many installed packages.
type InstalledPackageSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// InstalledPackageReference
	//
	// A reference uniquely identifying the package.
	InstalledPackageRef *InstalledPackageReference `protobuf:"bytes,1,opt,name=installed_package_ref,json=installedPackageRef,proto3" json:"installed_package_ref,omitempty"`
	// Name
	//
	// A name given to the installation of the package (eg. "my-postgresql-for-testing").
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// PkgVersionReference
	//
	// The package version reference defines a version or constraint limiting
	// matching package versions.
	PkgVersionReference *VersionReference `protobuf:"bytes,3,opt,name=pkg_version_reference,json=pkgVersionReference,proto3" json:"pkg_version_reference,omitempty"`
	// CurrentPkgVersion
	//
	// The version of the package which is currently installed.
	CurrentPkgVersion string `protobuf:"bytes,4,opt,name=current_pkg_version,json=currentPkgVersion,proto3" json:"current_pkg_version,omitempty"`
	// Installed package icon URL
	//
	// A url for an icon.
	IconUrl string `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// PackageDisplayName
	//
	// The package name as displayed to users (provided by the package, eg. "PostgreSQL")
	PkgDisplayName string `protobuf:"bytes,6,opt,name=pkg_display_name,json=pkgDisplayName,proto3" json:"pkg_display_name,omitempty"`
	// ShortDescription
	//
	// A short description of the package (provided by the package)
	ShortDescription string `protobuf:"bytes,7,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	// LatestMatchingPkgVersion
	//
	// Only non-empty if an available upgrade matches the specified pkg_version_reference.
	// For example, if the pkg_version_reference is ">10.3.0 < 10.4.0" and 10.3.1
	// is installed, then:
	//   * if 10.3.2 is available, latest_matching_version should be 10.3.2, but
	//   * if 10.4 is available while >10.3.1 is not, this should remain empty.
	LatestMatchingPkgVersion string `protobuf:"bytes,8,opt,name=latest_matching_pkg_version,json=latestMatchingPkgVersion,proto3" json:"latest_matching_pkg_version,omitempty"`
	// LatestPkgVersion
	//
	// The latest version available for this package, regardless of the pkg_version_reference.
	LatestPkgVersion string `protobuf:"bytes,9,opt,name=latest_pkg_version,json=latestPkgVersion,proto3" json:"latest_pkg_version,omitempty"`
}

func (x *InstalledPackageSummary) Reset() {
	*x = InstalledPackageSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstalledPackageSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledPackageSummary) ProtoMessage() {}

func (x *InstalledPackageSummary) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledPackageSummary.ProtoReflect.Descriptor instead.
func (*InstalledPackageSummary) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{10}
}

func (x *InstalledPackageSummary) GetInstalledPackageRef() *InstalledPackageReference {
	if x != nil {
		return x.InstalledPackageRef
	}
	return nil
}

func (x *InstalledPackageSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstalledPackageSummary) GetPkgVersionReference() *VersionReference {
	if x != nil {
		return x.PkgVersionReference
	}
	return nil
}

func (x *InstalledPackageSummary) GetCurrentPkgVersion() string {
	if x != nil {
		return x.CurrentPkgVersion
	}
	return ""
}

func (x *InstalledPackageSummary) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *InstalledPackageSummary) GetPkgDisplayName() string {
	if x != nil {
		return x.PkgDisplayName
	}
	return ""
}

func (x *InstalledPackageSummary) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *InstalledPackageSummary) GetLatestMatchingPkgVersion() string {
	if x != nil {
		return x.LatestMatchingPkgVersion
	}
	return ""
}

func (x *InstalledPackageSummary) GetLatestPkgVersion() string {
	if x != nil {
		return x.LatestPkgVersion
	}
	return ""
}

// Context
//
// A Context specifies the context of the message
type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster
	//
	// A cluster name can be provided to target a specific cluster if multiple
	// clusters are configured, otherwise all clusters will be assumed.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Namespace
	//
	// A namespace must be provided if the context of the operation is for a resource
	// or resources in a particular namespace.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{11}
}

func (x *Context) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Context) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// AvailablePackageReference
//
// An AvailablePackageReference has the minimum information required to uniquely
// identify an available package. This is re-used on the summary and details of an
// available package.
type AvailablePackageReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Available package context
	//
	// The context (cluster/namespace) for the package.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// Available package identifier
	//
	// The fully qualified identifier for the available package
	// (ie. a unique name for the context). For some packaging systems
	// (particularly those where an available package is backed by a CR) this
	// will just be the name, but for others such as those where an available
	// package is not backed by a CR (eg. standard helm) it may be necessary
	// to include the repository in the name or even the repo namespace
	// to ensure this is unique.
	// For example two helm repositories can define
	// an "apache" chart that is available globally, the names would need to
	// encode that to be unique (ie. "repoA:apache" and "repoB:apache").
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Plugin for the available package
	//
	// The plugin used to interact with this available package.
	// This field should be omitted when the request is in the context of a specific plugin.
	Plugin *v1alpha1.Plugin `protobuf:"bytes,3,opt,name=plugin,proto3" json:"plugin,omitempty"`
}

func (x *AvailablePackageReference) Reset() {
	*x = AvailablePackageReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablePackageReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablePackageReference) ProtoMessage() {}

func (x *AvailablePackageReference) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablePackageReference.ProtoReflect.Descriptor instead.
func (*AvailablePackageReference) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{12}
}

func (x *AvailablePackageReference) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *AvailablePackageReference) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *AvailablePackageReference) GetPlugin() *v1alpha1.Plugin {
	if x != nil {
		return x.Plugin
	}
	return nil
}

// Maintainer
//
// Maintainers for the package.
type Maintainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maintainer name
	//
	// A maintainer name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Maintainer email
	//
	// A maintainer email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Maintainer) Reset() {
	*x = Maintainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Maintainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maintainer) ProtoMessage() {}

func (x *Maintainer) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maintainer.ProtoReflect.Descriptor instead.
func (*Maintainer) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{13}
}

func (x *Maintainer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Maintainer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// FilterOptions
//
// FilterOptions available when requesting summaries
type FilterOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Text query
	//
	// Text query for the request
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Categories
	//
	// Collection of categories for the request
	Categories []string `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	// Repositories
	//
	// Collection of repositories where the packages belong to
	Repositories []string `protobuf:"bytes,3,rep,name=repositories,proto3" json:"repositories,omitempty"`
	// Package version
	//
	// Package version for the request
	PkgVersion string `protobuf:"bytes,4,opt,name=pkg_version,json=pkgVersion,proto3" json:"pkg_version,omitempty"`
	// App version
	//
	// Packaged app version for the request
	AppVersion string `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
}

func (x *FilterOptions) Reset() {
	*x = FilterOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterOptions) ProtoMessage() {}

func (x *FilterOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterOptions.ProtoReflect.Descriptor instead.
func (*FilterOptions) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{14}
}

func (x *FilterOptions) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FilterOptions) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *FilterOptions) GetRepositories() []string {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *FilterOptions) GetPkgVersion() string {
	if x != nil {
		return x.PkgVersion
	}
	return ""
}

func (x *FilterOptions) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

// PaginationOptions
//
// The PaginationOptions based on the example proto at:
// https://cloud.google.com/apis/design/design_patterns#list_pagination
// just encapsulated in a message so it can be reused on different request messages.
type PaginationOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Page token
	//
	// The client uses this field to request a specific page of the list results.
	PageToken string `protobuf:"bytes,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Page size
	//
	// Clients use this field to specify the maximum number of results to be
	// returned by the server. The server may further constrain the maximum number
	// of results returned in a single page. If the page_size is 0, the server
	// will decide the number of results to be returned.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PaginationOptions) Reset() {
	*x = PaginationOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationOptions) ProtoMessage() {}

func (x *PaginationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationOptions.ProtoReflect.Descriptor instead.
func (*PaginationOptions) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{15}
}

func (x *PaginationOptions) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *PaginationOptions) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// InstalledPackageReference
//
// An InstalledPackageReference has the minimum information required to uniquely
// identify an installed package.
type InstalledPackageReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Installed package context
	//
	// The context (cluster/namespace) for the package.
	Context *Context `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// The fully qualified identifier for the installed package
	// (ie. a unique name for the context).
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The plugin used to identify and interact with the installed package.
	// This field can be omitted when the request is in the context of a specific plugin.
	Plugin *v1alpha1.Plugin `protobuf:"bytes,3,opt,name=plugin,proto3" json:"plugin,omitempty"`
}

func (x *InstalledPackageReference) Reset() {
	*x = InstalledPackageReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstalledPackageReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledPackageReference) ProtoMessage() {}

func (x *InstalledPackageReference) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledPackageReference.ProtoReflect.Descriptor instead.
func (*InstalledPackageReference) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{16}
}

func (x *InstalledPackageReference) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *InstalledPackageReference) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *InstalledPackageReference) GetPlugin() *v1alpha1.Plugin {
	if x != nil {
		return x.Plugin
	}
	return nil
}

// VersionReference
//
// A VersionReference defines a version or constraint limiting matching versions.
// The reason it is a separate message is so that in the future we can add other
// fields as necessary (such as something similar to Carvel's `prereleases` option
// to its versionSelection).
type VersionReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The format of the version constraint depends on the backend. For example,
	// for a flux v2 and Carvel it’s a semver expression, such as ">=10.3 < 10.4"
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionReference) Reset() {
	*x = VersionReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionReference) ProtoMessage() {}

func (x *VersionReference) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionReference.ProtoReflect.Descriptor instead.
func (*VersionReference) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{17}
}

func (x *VersionReference) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// PackageAppVersion conveys both the package version and the packaged app version.
type GetAvailablePackageVersionsResponse_PackageAppVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkgVersion string `protobuf:"bytes,1,opt,name=pkg_version,json=pkgVersion,proto3" json:"pkg_version,omitempty"`
	AppVersion string `protobuf:"bytes,2,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
}

func (x *GetAvailablePackageVersionsResponse_PackageAppVersion) Reset() {
	*x = GetAvailablePackageVersionsResponse_PackageAppVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailablePackageVersionsResponse_PackageAppVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailablePackageVersionsResponse_PackageAppVersion) ProtoMessage() {}

func (x *GetAvailablePackageVersionsResponse_PackageAppVersion) ProtoReflect() protoreflect.Message {
	mi := &file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailablePackageVersionsResponse_PackageAppVersion.ProtoReflect.Descriptor instead.
func (*GetAvailablePackageVersionsResponse_PackageAppVersion) Descriptor() ([]byte, []int) {
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetAvailablePackageVersionsResponse_PackageAppVersion) GetPkgVersion() string {
	if x != nil {
		return x.PkgVersion
	}
	return ""
}

func (x *GetAvailablePackageVersionsResponse_PackageAppVersion) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

var File_kubeappsapis_core_packages_v1alpha1_packages_proto protoreflect.FileDescriptor

var file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x30, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x02, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x59, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x65, 0x0a, 0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x15, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xb9, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70,
	0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x65, 0x0a, 0x12,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61,
	0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x1c,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x1a, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x16, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x8b, 0x02, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x14, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61,
	0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x55, 0x0a, 0x11, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xce, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x1c, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x1a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xba, 0x02, 0x0a, 0x17, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x72, 0x0a, 0x15,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xea, 0x04,
	0x0a, 0x16, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x72, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70,
	0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a,
	0x10, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x51, 0x0a, 0x0b,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x39, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x9b, 0x04, 0x0a, 0x17, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x72, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x69,
	0x0a, 0x15, 0x70, 0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x70, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6b, 0x67, 0x5f, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x6b, 0x67, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x50, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6b, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6b,
	0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x19,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x75, 0x62,
	0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0x36, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xab, 0x01,
	0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6b, 0x67,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x11, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc7, 0x01, 0x0a,
	0x19, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x75,
	0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0x2c, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x32, 0xc6, 0x07, 0x0a, 0x0f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xee, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x48, 0x2e, 0x6b, 0x75, 0x62, 0x65,
	0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0xe3, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x45, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70,
	0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46,
	0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0xea, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x47, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61,
	0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xee, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x48, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70,
	0x70, 0x73, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x42, 0x4b, 0x5a,
	0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x62, 0x65,
	0x61, 0x70, 0x70, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x63, 0x6d,
	0x64, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x70, 0x70, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescOnce sync.Once
	file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescData = file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDesc
)

func file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescGZIP() []byte {
	file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescOnce.Do(func() {
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescData = protoimpl.X.CompressGZIP(file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescData)
	})
	return file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDescData
}

var file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_kubeappsapis_core_packages_v1alpha1_packages_proto_goTypes = []interface{}{
	(*GetAvailablePackageSummariesRequest)(nil),                   // 0: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesRequest
	(*GetAvailablePackageDetailRequest)(nil),                      // 1: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailRequest
	(*GetAvailablePackageVersionsRequest)(nil),                    // 2: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsRequest
	(*GetInstalledPackageSummariesRequest)(nil),                   // 3: kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesRequest
	(*GetAvailablePackageSummariesResponse)(nil),                  // 4: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesResponse
	(*GetAvailablePackageDetailResponse)(nil),                     // 5: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailResponse
	(*GetAvailablePackageVersionsResponse)(nil),                   // 6: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsResponse
	(*GetInstalledPackageSummariesResponse)(nil),                  // 7: kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesResponse
	(*AvailablePackageSummary)(nil),                               // 8: kubeappsapis.core.packages.v1alpha1.AvailablePackageSummary
	(*AvailablePackageDetail)(nil),                                // 9: kubeappsapis.core.packages.v1alpha1.AvailablePackageDetail
	(*InstalledPackageSummary)(nil),                               // 10: kubeappsapis.core.packages.v1alpha1.InstalledPackageSummary
	(*Context)(nil),                                               // 11: kubeappsapis.core.packages.v1alpha1.Context
	(*AvailablePackageReference)(nil),                             // 12: kubeappsapis.core.packages.v1alpha1.AvailablePackageReference
	(*Maintainer)(nil),                                            // 13: kubeappsapis.core.packages.v1alpha1.Maintainer
	(*FilterOptions)(nil),                                         // 14: kubeappsapis.core.packages.v1alpha1.FilterOptions
	(*PaginationOptions)(nil),                                     // 15: kubeappsapis.core.packages.v1alpha1.PaginationOptions
	(*InstalledPackageReference)(nil),                             // 16: kubeappsapis.core.packages.v1alpha1.InstalledPackageReference
	(*VersionReference)(nil),                                      // 17: kubeappsapis.core.packages.v1alpha1.VersionReference
	(*GetAvailablePackageVersionsResponse_PackageAppVersion)(nil), // 18: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsResponse.PackageAppVersion
	(*anypb.Any)(nil),                                             // 19: google.protobuf.Any
	(*v1alpha1.Plugin)(nil),                                       // 20: kubeappsapis.core.plugins.v1alpha1.Plugin
}
var file_kubeappsapis_core_packages_v1alpha1_packages_proto_depIdxs = []int32{
	11, // 0: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesRequest.context:type_name -> kubeappsapis.core.packages.v1alpha1.Context
	14, // 1: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesRequest.filter_options:type_name -> kubeappsapis.core.packages.v1alpha1.FilterOptions
	15, // 2: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesRequest.pagination_options:type_name -> kubeappsapis.core.packages.v1alpha1.PaginationOptions
	12, // 3: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailRequest.available_package_ref:type_name -> kubeappsapis.core.packages.v1alpha1.AvailablePackageReference
	12, // 4: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsRequest.available_package_ref:type_name -> kubeappsapis.core.packages.v1alpha1.AvailablePackageReference
	11, // 5: kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesRequest.context:type_name -> kubeappsapis.core.packages.v1alpha1.Context
	15, // 6: kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesRequest.pagination_options:type_name -> kubeappsapis.core.packages.v1alpha1.PaginationOptions
	8,  // 7: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesResponse.available_packages_summaries:type_name -> kubeappsapis.core.packages.v1alpha1.AvailablePackageSummary
	9,  // 8: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailResponse.available_package_detail:type_name -> kubeappsapis.core.packages.v1alpha1.AvailablePackageDetail
	18, // 9: kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsResponse.package_app_versions:type_name -> kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsResponse.PackageAppVersion
	10, // 10: kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesResponse.installed_packages_summaries:type_name -> kubeappsapis.core.packages.v1alpha1.InstalledPackageSummary
	12, // 11: kubeappsapis.core.packages.v1alpha1.AvailablePackageSummary.available_package_ref:type_name -> kubeappsapis.core.packages.v1alpha1.AvailablePackageReference
	12, // 12: kubeappsapis.core.packages.v1alpha1.AvailablePackageDetail.available_package_ref:type_name -> kubeappsapis.core.packages.v1alpha1.AvailablePackageReference
	13, // 13: kubeappsapis.core.packages.v1alpha1.AvailablePackageDetail.maintainers:type_name -> kubeappsapis.core.packages.v1alpha1.Maintainer
	19, // 14: kubeappsapis.core.packages.v1alpha1.AvailablePackageDetail.custom_detail:type_name -> google.protobuf.Any
	16, // 15: kubeappsapis.core.packages.v1alpha1.InstalledPackageSummary.installed_package_ref:type_name -> kubeappsapis.core.packages.v1alpha1.InstalledPackageReference
	17, // 16: kubeappsapis.core.packages.v1alpha1.InstalledPackageSummary.pkg_version_reference:type_name -> kubeappsapis.core.packages.v1alpha1.VersionReference
	11, // 17: kubeappsapis.core.packages.v1alpha1.AvailablePackageReference.context:type_name -> kubeappsapis.core.packages.v1alpha1.Context
	20, // 18: kubeappsapis.core.packages.v1alpha1.AvailablePackageReference.plugin:type_name -> kubeappsapis.core.plugins.v1alpha1.Plugin
	11, // 19: kubeappsapis.core.packages.v1alpha1.InstalledPackageReference.context:type_name -> kubeappsapis.core.packages.v1alpha1.Context
	20, // 20: kubeappsapis.core.packages.v1alpha1.InstalledPackageReference.plugin:type_name -> kubeappsapis.core.plugins.v1alpha1.Plugin
	0,  // 21: kubeappsapis.core.packages.v1alpha1.PackagesService.GetAvailablePackageSummaries:input_type -> kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesRequest
	1,  // 22: kubeappsapis.core.packages.v1alpha1.PackagesService.GetAvailablePackageDetail:input_type -> kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailRequest
	2,  // 23: kubeappsapis.core.packages.v1alpha1.PackagesService.GetAvailablePackageVersions:input_type -> kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsRequest
	3,  // 24: kubeappsapis.core.packages.v1alpha1.PackagesService.GetInstalledPackageSummaries:input_type -> kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesRequest
	4,  // 25: kubeappsapis.core.packages.v1alpha1.PackagesService.GetAvailablePackageSummaries:output_type -> kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesResponse
	5,  // 26: kubeappsapis.core.packages.v1alpha1.PackagesService.GetAvailablePackageDetail:output_type -> kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailResponse
	6,  // 27: kubeappsapis.core.packages.v1alpha1.PackagesService.GetAvailablePackageVersions:output_type -> kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsResponse
	7,  // 28: kubeappsapis.core.packages.v1alpha1.PackagesService.GetInstalledPackageSummaries:output_type -> kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesResponse
	25, // [25:29] is the sub-list for method output_type
	21, // [21:25] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_kubeappsapis_core_packages_v1alpha1_packages_proto_init() }
func file_kubeappsapis_core_packages_v1alpha1_packages_proto_init() {
	if File_kubeappsapis_core_packages_v1alpha1_packages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailablePackageSummariesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailablePackageDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailablePackageVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstalledPackageSummariesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailablePackageSummariesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailablePackageDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailablePackageVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstalledPackageSummariesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablePackageSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablePackageDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstalledPackageSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablePackageReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Maintainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstalledPackageReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailablePackageVersionsResponse_PackageAppVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kubeappsapis_core_packages_v1alpha1_packages_proto_goTypes,
		DependencyIndexes: file_kubeappsapis_core_packages_v1alpha1_packages_proto_depIdxs,
		MessageInfos:      file_kubeappsapis_core_packages_v1alpha1_packages_proto_msgTypes,
	}.Build()
	File_kubeappsapis_core_packages_v1alpha1_packages_proto = out.File
	file_kubeappsapis_core_packages_v1alpha1_packages_proto_rawDesc = nil
	file_kubeappsapis_core_packages_v1alpha1_packages_proto_goTypes = nil
	file_kubeappsapis_core_packages_v1alpha1_packages_proto_depIdxs = nil
}
