// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ResourcesServiceClient is the client API for ResourcesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ResourcesServiceClient interface {
	GetResources(ctx context.Context, in *GetResourcesRequest, opts ...grpc.CallOption) (ResourcesService_GetResourcesClient, error)
}

type resourcesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewResourcesServiceClient(cc grpc.ClientConnInterface) ResourcesServiceClient {
	return &resourcesServiceClient{cc}
}

func (c *resourcesServiceClient) GetResources(ctx context.Context, in *GetResourcesRequest, opts ...grpc.CallOption) (ResourcesService_GetResourcesClient, error) {
	stream, err := c.cc.NewStream(ctx, &ResourcesService_ServiceDesc.Streams[0], "/kubeappsapis.plugins.resources.v1alpha1.ResourcesService/GetResources", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourcesServiceGetResourcesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourcesService_GetResourcesClient interface {
	Recv() (*GetResourcesResponse, error)
	grpc.ClientStream
}

type resourcesServiceGetResourcesClient struct {
	grpc.ClientStream
}

func (x *resourcesServiceGetResourcesClient) Recv() (*GetResourcesResponse, error) {
	m := new(GetResourcesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ResourcesServiceServer is the server API for ResourcesService service.
// All implementations should embed UnimplementedResourcesServiceServer
// for forward compatibility
type ResourcesServiceServer interface {
	GetResources(*GetResourcesRequest, ResourcesService_GetResourcesServer) error
}

// UnimplementedResourcesServiceServer should be embedded to have forward compatible implementations.
type UnimplementedResourcesServiceServer struct {
}

func (UnimplementedResourcesServiceServer) GetResources(*GetResourcesRequest, ResourcesService_GetResourcesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetResources not implemented")
}

// UnsafeResourcesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ResourcesServiceServer will
// result in compilation errors.
type UnsafeResourcesServiceServer interface {
	mustEmbedUnimplementedResourcesServiceServer()
}

func RegisterResourcesServiceServer(s grpc.ServiceRegistrar, srv ResourcesServiceServer) {
	s.RegisterService(&ResourcesService_ServiceDesc, srv)
}

func _ResourcesService_GetResources_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetResourcesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourcesServiceServer).GetResources(m, &resourcesServiceGetResourcesServer{stream})
}

type ResourcesService_GetResourcesServer interface {
	Send(*GetResourcesResponse) error
	grpc.ServerStream
}

type resourcesServiceGetResourcesServer struct {
	grpc.ServerStream
}

func (x *resourcesServiceGetResourcesServer) Send(m *GetResourcesResponse) error {
	return x.ServerStream.SendMsg(m)
}

// ResourcesService_ServiceDesc is the grpc.ServiceDesc for ResourcesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ResourcesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kubeappsapis.plugins.resources.v1alpha1.ResourcesService",
	HandlerType: (*ResourcesServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetResources",
			Handler:       _ResourcesService_GetResources_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "kubeappsapis/plugins/resources/v1alpha1/resources.proto",
}
