syntax = "proto3";
package kubeappsapis.plugins.resources.v1alpha1;
option go_package = "github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen/plugins/resources/v1alpha1";

import "kubeappsapis/core/packages/v1alpha1/packages.proto";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

service ResourcesService {
    rpc GetResources(GetResourcesRequest) returns (stream GetResourcesResponse) {
        option (google.api.http) = {
            get: "/plugins/resources/v1alpha1/{installed_package_ref.plugin.name}/{installed_package_ref.plugin.version}/c/{installed_package_ref.context.cluster}/ns/{installed_package_ref.context.namespace}/{installed_package_ref.identifier}"
        };
    }
    rpc GetServiceAccountNames(GetServiceAccountNamesRequest) returns (GetServiceAccountNamesResponse) {
        option (google.api.http) = {
            get: "/plugins/resources/v1alpha1/c/{context.cluster}/ns/{context.namespace}/serviceaccountnames"
        };
    }
}

// GetResourcesRequest
//
// Request for GetResources that specifies the resource references to get or watch.
message GetResourcesRequest {
    // InstalledPackageRef
    //
    // The installed package reference for which the resources are being fetched.
    kubeappsapis.core.packages.v1alpha1.InstalledPackageReference installed_package_ref = 1;

    // ResourceRefs
    //
    // The references to the resources that are to be fetched or watched.
    // If empty, all resources for the installed package are returned when only
    // getting the resources. It must be populated to watch resources to avoid
    // watching all resources unnecessarily.
    repeated kubeappsapis.core.packages.v1alpha1.ResourceRef resource_refs = 2;

    // Watch
    //
    // When true, this will cause the stream to remain open with updated
    // resources being sent as events are received from the Kubernetes API
    // server.
    bool watch = 3;
}

message GetResourcesResponse {
    // ResourceRef
    //
    // The resource reference for this single resource.
    kubeappsapis.core.packages.v1alpha1.ResourceRef resource_ref = 1;

    // Manifest
    //
    // The current manifest of the requested resource.
    // Initially the JSON manifest will be returned as an Any, enabling the
    // existing Kubeapps UI to replace its current direct api-server getting and
    // watching of resources, but we may in the future pull out further
    // structured metadata into this message as needed.
    google.protobuf.Any manifest = 2;
}

// GetServiceAccountNamesRequest
//
// Request for GetServiceAccountNames
message GetServiceAccountNamesRequest { 
    // Context
    //
    // The context for which the service account names are being fetched.
    kubeappsapis.core.packages.v1alpha1.Context context = 1;
}

// GetServiceAccountNamesResponse
//
// Response for GetServiceAccountNames
message GetServiceAccountNamesResponse {
    // ServiceAccountNames
    //
    // The list of Service Account names.
    repeated string serviceaccount_names = 1;
}
