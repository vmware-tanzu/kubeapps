syntax = "proto3";
package kubeappsapis.plugins.helm.packages.v1alpha1;
option go_package = "github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen/plugins/helm/packages/v1alpha1";

import "google/api/annotations.proto";
import "kubeappsapis/core/packages/v1alpha1/packages.proto";
import "kubeappsapis/core/plugins/v1alpha1/plugins.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service HelmPackagesService {
  // GetAvailablePackageSummaries returns the available packages managed by the 'helm' plugin
  rpc GetAvailablePackageSummaries(kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesRequest) returns (kubeappsapis.core.packages.v1alpha1.GetAvailablePackageSummariesResponse) {
    option (google.api.http) = {
      get: "/plugins/helm/packages/v1alpha1/availablepackagesummaries"
    };
  };

  // GetAvailablePackageDetail returns the package details managed by the 'helm' plugin
  rpc GetAvailablePackageDetail(kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailRequest) returns (kubeappsapis.core.packages.v1alpha1.GetAvailablePackageDetailResponse) {
    option (google.api.http) = {
      get: "/plugins/helm/packages/v1alpha1/availablepackagedetails"
    };
  }

  // GetAvailablePackageVersions returns the package versions managed by the 'helm' plugin
  rpc GetAvailablePackageVersions(kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsRequest) returns (kubeappsapis.core.packages.v1alpha1.GetAvailablePackageVersionsResponse) {
    option (google.api.http) = {
      get: "/plugins/helm/packages/v1alpha1/availablepackageversions"
    };
  }

  // GetInstalledPackageSummaries returns the installed packages managed by the 'helm' plugin
  rpc GetInstalledPackageSummaries(kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesRequest) returns (kubeappsapis.core.packages.v1alpha1.GetInstalledPackageSummariesResponse) {
    option (google.api.http) = {
      get: "/plugins/helm/packages/v1alpha1/installedpackagesummaries"
    };
  }

  // GetInstalledPackageDetail returns the requested installed package managed by the 'helm' plugin
  rpc GetInstalledPackageDetail(kubeappsapis.core.packages.v1alpha1.GetInstalledPackageDetailRequest) returns (kubeappsapis.core.packages.v1alpha1.GetInstalledPackageDetailResponse) {
    option (google.api.http) = {
      get: "/plugins/helm/packages/v1alpha1/installedpackagedetail"
    };
  }

  // CreateInstalledPackage creates an installed package based on the request.
  rpc CreateInstalledPackage(kubeappsapis.core.packages.v1alpha1.CreateInstalledPackageRequest) returns (kubeappsapis.core.packages.v1alpha1.CreateInstalledPackageResponse) {
    option (google.api.http) = {
      post: "/plugins/helm/packages/v1alpha1/installedpackages"
      body: "*"
    };
  }

   // UpdateInstalledPackage updates an installed package based on the request.
   rpc UpdateInstalledPackage(kubeappsapis.core.packages.v1alpha1.UpdateInstalledPackageRequest) returns (kubeappsapis.core.packages.v1alpha1.UpdateInstalledPackageResponse) {
    option (google.api.http) = {
      patch: "/plugins/helm/packages/v1alpha1/installedpackages"
      body: "*"
    };
  }

  // DeleteInstalledPackage deletes an installed package based on the request.
  rpc DeleteInstalledPackage(kubeappsapis.core.packages.v1alpha1.DeleteInstalledPackageRequest) returns (kubeappsapis.core.packages.v1alpha1.DeleteInstalledPackageResponse) {
    option (google.api.http) = {
      delete: "/plugins/helm/packages/v1alpha1/installedpackages"
    };
  }
}

// InstalledPackageDetailCustomDataHelm
//
// InstalledPackageDetailCustomDataHelm is a message type used for the
// InstalledPackageDetail.CustomDetail field by the helm plugin.
message InstalledPackageDetailCustomDataHelm {

  // ReleaseRevision
  //
  // A number identifying the Helm revision
  int32 release_revision = 1;
}
