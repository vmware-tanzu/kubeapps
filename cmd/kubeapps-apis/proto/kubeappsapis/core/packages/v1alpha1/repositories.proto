// Copyright 2021-2022 the Kubeapps contributors.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";
package kubeappsapis.core.packages.v1alpha1;
option go_package = "github.com/kubeapps/kubeapps/cmd/kubeapps-apis/gen/core/packages/v1alpha1";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "kubeappsapis/core/packages/v1alpha1/packages.proto";
import "kubeappsapis/core/plugins/v1alpha1/plugins.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// This protobuf file defines the request and response types for API calls
// interacting with repositories, as well as the RepositoriesService to be implemented.

// Each repositories v1alpha1 plugin must implement at least the following rpcs:
//
service RepositoriesService {
  rpc AddPackageRepository(AddPackageRepositoryRequest) returns (AddPackageRepositoryResponse) {
    option (google.api.http) = {
      post: "/core/packages/v1alpha1/repositories"
      body: "*"
    };
   }
}

// Standard request and response messages for each required function are defined
// below for import and re-use.

// -- Start definitions of the request messages --

// AddPackageRepositoryRequest
//
// Request for AddPackageRepository
message AddPackageRepositoryRequest {
  // The target context where the package repository is intended to be 
  // installed.
  Context context = 1;

  // A user-provided name for the package repository (e.g. bitnami)
  string name = 2;

  // A user-provided description. Optional
  string description = 3;

  // Whether this repository is global or namespace-scoped. Optional.
  // By default, the value is false, i.e. the repository is global
  bool namespace_scoped = 4;

  // Package storage type 
  // In general, each plug-in will define an acceptable set of valid types 
  // - for direct helm plug-in valid values are: helm, oci
  // - for flux plug-in currently only supported value is helm. In the
  //   future, we may add support for git and/or AWS s3-style buckets 
  string type = 5;

  // A URL identifying the package repository location. Must contain at 
  // least a protocol and host
  string url = 6;

  // The interval at which to check the upstream for updates (in seconds)
  // Optional. Defaults to 10m if not specified
  uint32 interval = 7;

  // TLS-specific parameters for connecting to a repository. Optional 
  PackageRepositoryTlsConfig tls_config = 8;

  // The plugin used to interact with this package repository.
  // This field should be omitted when the request is in the context of a
  // specific plugin.
  kubeappsapis.core.plugins.v1alpha1.Plugin plugin = 10;
}

// PackageRepositoryTlsConfig
//
message PackageRepositoryTlsConfig {
  // whether or not to skip TLS verification
  // note that fluxv2 does not currently support this and will raise an
  // error should this flag be set to true
  bool insecure_skip_verify = 1;

  oneof package_repo_tls_config_one_of {
    // certificate authority. Optional
    string cert_authority = 2;

    // a reference to an existing secret that contains custom CA
    SecretKeyReference secret_ref = 3;
  }
}

// SecretKeyReference
//
message SecretKeyReference {
  // The name of an existing secret in the same namespace as the object 
  // that refers to it (e.g. PackageRepository), containing authentication 
  // credentials for the said package repository.
  // - For HTTP/S basic auth the secret must be of type 
  //   "kubernetes.io/basic-auth" and contain username and
  //   password fields.
  // - For TLS the secret must be of type "kubernetes.io/tls" 
  //   contain a certFile and keyFile, and/or
  //   caCert fields.
  // - For Bearer or Custom Auth, the secret must be opaque, and 
  //   the key must be provided
  // - For Docker Registry Credentials (OCI registries) the secret
  //   must of of type "kubernetes.io/dockerconfigjson‚Äù
  // For more details, refer to 
  // https://kubernetes.io/docs/concepts/configuration/secret/
  string name = 1;

  // Optional. Must be provided when name refers to an opaque secret
  string key = 2;
}

// -- Start definitions of the response messages --

// AddPackageRepositoryResponse
//
// Response for AddPackageRepositoryRequest
message AddPackageRepositoryResponse {
}

