apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "kubeapps.kubeappsapis.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: kubeappsapis
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" . ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.kubeappsapis.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: kubeappsapis
  template:
    metadata:
      {{- if .Values.kubeappsapis.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: kubeappsapis
        {{- if .Values.kubeappsapis.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "kubeapps.imagePullSecrets" . | indent 6 }}
      serviceAccountName: {{ template "kubeapps.kubeappsapis.fullname" . }}
      {{- if .Values.kubeappsapis.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      # Increase termination timeout to let remaining operations to finish before killing the pods
      # This is because new releases/upgrades/deletions are synchronous operations
      {{- if .Values.kubeappsapis.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.kubeappsapis.podAffinityPreset "component" "kubeappsapis" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.kubeappsapis.podAntiAffinityPreset "component" "kubeappsapis" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.kubeappsapis.nodeAffinityPreset.type "key" .Values.kubeappsapis.nodeAffinityPreset.key "values" .Values.kubeappsapis.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.kubeappsapis.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.kubeappsapis.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.kubeappsapis.priorityClassName }}
      priorityClassName: {{ .Values.kubeappsapis.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.kubeappsapis.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.kubeappsapis.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.kubeappsapis.terminationGracePeriodSeconds }}
      containers:
        - name: kubeappsapis
          image: {{ include "common.images.image" (dict "imageRoot" .Values.kubeappsapis.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.kubeappsapis.image.pullPolicy | quote }}
          {{- if .Values.kubeappsapis.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.kubeappsapis.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.kubeappsapis.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          command:
            - /kubeapps-apis
          args:
            {{- range .Values.kubeappsapis.enabledPlugins }}
            - --plugin-dir
            - /plugins/{{ . }}
            {{- end }}
            {{- if .Values.clusters }}
            - --clusters-config-path=/config/clusters.conf
            {{- end }}
            {{- if .Values.kubeappsapis.pluginConfig }}
            - --plugin-config-path=/config/kubeapps-apis/plugins.conf
            {{- end }}
            {{- if .Values.pinnipedProxy.enabled }}
            - --pinniped-proxy-url=http://{{ template "kubeapps.pinniped-proxy.fullname" . }}.{{ .Release.Namespace }}:{{ .Values.pinnipedProxy.containerPort }}
            {{- end }}
          env:
            - name: GOGC
              value: "50" # default is 100. 50 means increasing x2 the frequency of GC 
            - name: PORT
              value: {{ .Values.kubeappsapis.containerPort | quote }}
            {{- if .Values.redis.enabled }}
            # REDIS-* vars are required by the plugins for caching functionality
            # TODO (gfichtenolt) this as required by the kubeapps apis service (which will
            # longer-term pass something to the plugins so that the plugins won't need to
            # know these details). Currently they're used directly by the flux plugin
            - name: REDIS_ADDR
              value: kubeapps-redis-master.{{ .Release.Namespace }}.svc.cluster.local:6379
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: {{ include "kubeapps.redis.secretName" . }}
            - name: REDIS_DB
              value: "0"
            {{- end }}
            # TODO(agamez): pass this configuration using a separated config file
            # These env vars are currently (and temporarily) required by the 'helm' plugin
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ASSET_SYNCER_DB_URL
              value: {{ template "kubeapps.postgresql.fullname" . }}-headless:{{ default "5432" .Values.postgresql.service.port }}
            - name: ASSET_SYNCER_DB_NAME
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: ASSET_SYNCER_DB_USERNAME
              value: postgres
            - name: ASSET_SYNCER_DB_USERPASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: {{ include "kubeapps.postgresql.secretName" . }}
            {{- if .Values.kubeappsapis.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.kubeappsapis.extraEnvVarsCM .Values.kubeappsapis.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.kubeappsapis.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.kubeappsapis.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          ports:
            - name: grpc-http
              containerPort: {{ .Values.kubeappsapis.containerPort }}
          {{- if .Values.kubeappsapis.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.kubeappsapis.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- else if .Values.kubeappsapis.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.kubeappsapis.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.kubeappsapis.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- else if .Values.kubeappsapis.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.kubeappsapis.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.kubeappsapis.resources }}
          resources: {{- toYaml .Values.kubeappsapis.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.clusters }}
            - name: clusters-config
              mountPath: /config
            - name: ca-certs
              mountPath: /etc/additional-clusters-cafiles
          {{- end }}
          {{- if .Values.kubeappsapis.pluginConfig }}
            - name: plugins-config
              mountPath: /config/kubeapps-apis
          {{- end }}
      volumes:
      {{- if .Values.clusters }}
        - name: clusters-config
          configMap:
            name: {{ template "kubeapps.clusters-config.fullname" . }}
        - name: ca-certs
          emptyDir: {}
      {{- end }}
      {{- if .Values.kubeappsapis.pluginConfig }}
        - name: plugins-config
          configMap:
            name: {{ template "kubeapps.kubeappsapis.fullname" . }}-configmap
      {{- end }}
