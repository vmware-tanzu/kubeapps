{{- /*
Copyright VMware, Inc.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if .Values.packaging.helm.enabled }}
{{- $versionLabel := dict "app.kubernetes.io/version" ( include "common.images.version" ( dict "imageRoot" .Values.apprepository.image "chart" .Chart ) ) }}
{{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.commonLabels $versionLabel ) "context" . ) }}
{{- range .Values.apprepository.initialRepos }}
apiVersion: kubeapps.com/v1alpha1
kind: AppRepository
metadata:
  name: {{ .name }}
  namespace: {{ default (include "kubeapps.helmGlobalPackagingNamespace" $) .namespace | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
  {{- if $.Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  type: {{ default "helm" .type }}
  url: {{ .url }}
  {{- if .ociRepositories }}
  ociRepositories:
  {{- range .ociRepositories }}
  - {{ . }}
  {{- end }}
  {{- end }}
  {{- if or $.Values.apprepository.podSecurityContext.enabled $.Values.apprepository.containerSecurityContext.enabled $.Values.apprepository.initialReposProxy.enabled .nodeSelector .tolerations}}
  syncJobPodTemplate:
    spec:
      {{- if or $.Values.apprepository.initialReposProxy.enabled $.Values.apprepository.containerSecurityContext.enabled }}
      containers:
        -
      {{- if $.Values.apprepository.initialReposProxy.enabled }}
          env:
            - name: https_proxy
              value: {{ $.Values.apprepository.initialReposProxy.httpsProxy }}
            - name: http_proxy
              value: {{ $.Values.apprepository.initialReposProxy.httpProxy }}
            - name: no_proxy
              value: {{ $.Values.apprepository.initialReposProxy.noProxy }}
      {{- end }}
      {{- if $.Values.apprepository.containerSecurityContext.enabled }}
          securityContext: {{- omit $.Values.apprepository.containerSecurityContext "enabled" | toYaml | nindent 12 }}
      {{- end }}
      {{- end }}
      {{- if $.Values.apprepository.podSecurityContext.enabled }}
      securityContext: {{- omit $.Values.apprepository.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .nodeSelector }}
      nodeSelector: {{- toYaml .nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .tolerations }}
      tolerations: {{- toYaml .tolerations | nindent 8 }}
      {{- end }}
  {{- end }}
  {{- if or .caCert .authorizationHeader .basicAuth }}
  auth:
    {{- if .caCert }}
    customCA:
      secretKeyRef:
        key: ca.crt
        name: {{ printf "apprepo-%s-secrets" .name }}
    {{- end }}
    {{- if or .authorizationHeader .basicAuth }}
    header:
      secretKeyRef:
        key: authorizationHeader
        name: {{ printf "apprepo-%s-secrets" .name }}
    {{- end }}
  {{- end }}
  {{- if .filterRule }}
  filterRule:
    {{- toYaml .filterRule | nindent 4 }}
  {{- end }}
---
{{ end -}}
{{- end -}}
